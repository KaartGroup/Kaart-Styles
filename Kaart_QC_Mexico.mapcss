meta {
  title: "Sinopah QC";
  description: "Highlights features that were created/modified by users";
  watch-modified: true;
  version: "1.8";
  icon: "http://uncrate.com/p/2016/02/smart-kart.jpg";
  min-josm-version: "15289"; /* This style uses groups for settings */
}

/* Notes
1.0 Added styles -- provided by Jenn -- and users -- Ian -- 3/11/2019
1.1 Configured styles -- Louis -- 3/13/2019
1.2 Configured style colors and highlighting -- Ian -- 3/15/2019
1.3 Simplified user lines -- Louis -- 3/18/2019
1.4 Adjusted user, style lines and appearances -- 3/20/2019
1.5 Alphabetized users, added new users, added tips, simplified node highlight & node modified overlays -- Louis,Ian,AndrewP -- 5/15/2019
1.6 Updated to include both Sanitas and Nokhu teams -- Sarah R. -- 3/05/2020
1.7 Updated list of team members -- Logan Barnes -- 4/8/2020
1.8 Added Seattle, Quandry, and Krakatoa teams, new users, updated title and simplified set -- Landon S. -- 04/25/2022

Tips:

A setting should be created for each separate user:

setting::user_aaron {
  type: boolean;
  label: tr("Turn User Aaron On/Off");
  default: false;
}

-- after :: comes your setting "class" which can be named as you will. Our example show user_aaron
-- Type: boolean; should always exist
-- label: tr("Anything you want to put here") -> This is what shows up under setting in JOSM
-- Default: false -> the setting will remain disabled on launch until a user enables it

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

at which point, it becomes necessary to create a selector statement for your user:

*[osm_user_name() == "vespax"][setting("user_aaron")] {
  set .aaron;
}

-- * denotes what you are selecting, in this case, every element type in OSM
-- [osm_user_name() == "vespax"] -> this is necessary and should be constructed as such.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

In order to construct time stamps, you can use the following:

String: "[eval(JOSM_search("timestamp:2016-02-20/"))]" can be modified in several ways
"timestamp:2016-02-20/" -- Shows all edits edited after date
"timestamp:2016-02-20/2016-02-22" -- Shows all edits after 02-20 but before 02-22
"timestamp:2016-02/ Day and Month can be removed to widen the range of edits shown, example here shows all edits starting in FEB2016.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

So, a timestamped search would look like this:

*[osm_user_name() == "IndianaJones737"))][eval(JOSM_search("timestamp:2016-03-14/2016-03-15"] {
  casing-width: 10;
  casing-color: green;
  casing-opacity: 0.2;
}

-- set .aaron; -> this is setting the class for this statement. This allows us to call it out later on. Classes
can be set like that or as so -> set aaron;

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

way.aaron, & node.aaron,

-- This shows that we are looking for all ways/nodes which meet the "aaron" class. The comma here denotes
that there is another selector we would like to call out after "aaron"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
{
  z-index: -10;
  casing-color: lime;
  casing-width: 10;
  casing-opacity: 0.3;
}

-- This is our code block which will style up whatever we called out as a selector
*/

/* Create Settings */

/* User Settings */

/* Krakatoa */

settings::krakatoa {
  label: tr("Krakatoa");
}

setting::user_JoseL {
  type:boolean;
  label:tr("JDKaart|JoseL");
  default:true;
  group: "krakatoa";
}

setting::user_KiraM {
  type:boolean;
  label:tr("martymcfly14|KiraM");
  default:true;
  group: "krakatoa";
}

setting::user_ReillyM {
  type:boolean;
  label:tr("smileyreilly|ReillyM");
  default:true;
  group: "krakatoa";
}

setting::user_RyanM {
  type:boolean;
  label:tr("birdeatscake|RyanM");
  default:true;
  group: "krakatoa";
}

/* Quandary */

settings::quandary {
  label: tr("Quandary");
}

setting::user_CorbanG {
  type:boolean;
  label:tr("Corban8|CorbanG");
  default:true;
  group: "quandary";
}

setting::user_HamishH {
  type:boolean;
  label:tr("hairyhaggis|HamishH");
  default:true;
  group: "quandary";
}

setting::user_IanMa {
  type:boolean;
  label:tr("Baconcrisp|IanMa");
  default:true;
  group: "quandary";
}

setting::user_JakeK {
  type:boolean;
  label:tr("CoolGuyJake|JakeK");
  default:true;
  group: "quandary";
}

setting::user_JasonH {
  type:boolean;
  label:tr("AnonJason|JasonH");
  default:true;
  group: "quandary";
}

setting::user_JorgeA {
  type:boolean;
  label:tr("JAAS|JorgeA");
  default:true;
  group: "quandary";
}

setting::user_LaurenH {
  type:boolean;
  label:tr("Pegasus21|LaurenH");
  default:true;
  group: "quandary";
}

setting::user_PaceM {
  type:boolean;
  label:tr("InnerPace|PaceM");
  default:true;
  group: "quandary";
}

setting::user_PaulS {
  type:boolean;
  label:tr("hayduke1275|PaulS");
  default:true;
  group: "quandary";
}

setting::user_ToddK {
  type:boolean;
  label:tr("Toddtodd|ToddK");
  default:true;
  group: "quandary";
}

setting::user_TomH {
  type:boolean;
  label:tr("tomincolorado|TomH");
  default:true;
  group: "quandary";
}

setting::user_WilliamF {
  type:boolean;
  label:tr("Buddy-the-Elf|WilliamF");
  default:true;
  group: "quandary";
}

/* Sanitas */

settings::sanitas {
  label: tr("Sanitas");
}

setting::user_AaronL {
  type:boolean;
  label:tr("StriDez|AaronL");
  default:true;
  group: "sanitas";
}

setting::user_AlbaW {
  type:boolean;
  label:tr("albahabla|AlbaW");
  default:true;
  group: "sanitas";
}

setting::user_Angie {
  type: boolean;
  label: tr("Inigo_Maptoya|Angie");
  default: true;
  group: "sanitas";
}

setting::user_Anja {
  type: boolean;
  label: tr("PlinyTheYoungest|Anja");
  default: true;
  group: "sanitas";
}

setting::user_ArleneC {
  type:boolean;
  label:tr("ArleneC|ArleneC");
  default:true;
  group: "sanitas";
}

setting::user_BrandonP {
  type:boolean;
  label:tr("Almapthea|BrandonP");
  default:true;
  group: "sanitas";
}

setting::user_BreiaV {
  type:boolean;
  label:tr("ToastShark|BreiaV");
  default:true;
  group: "sanitas";
}

setting::user_ColterM {
  type:boolean;
  label:tr("Coltrain|ColterM");
  default:true;
  group: "sanitas";
}

setting::user_Daniel {
  type: boolean;
  label: tr("The_Intern|Daniel");
  default: true;
  group: "sanitas";
}

setting::user_GabeG {
  type: boolean;
  label: tr("GbabethemapGod|GabeG");
  default: true;
  group: "sanitas";
}

setting::user_IanK {
  type:boolean;
  label:tr("Ikohl|IanK");
  default:true;
  group: "sanitas";
}

setting::user_IanMc {
  type:boolean;
  label:tr("Winterson|IanMc");
  default:true;
  group: "sanitas";
}

setting::user_JamesP {
  type:boolean;
  label:tr("eggothy|JamesP");
  default:true;
  group: "sanitas";
}

setting::user_JessicaH {
  type:boolean;
  label:tr("Mapistopheles|JessicaH");
  default:true;
  group: "sanitas";
}

setting::user_LandonS {
  type:boolean;
  label:tr("luin132|LandonS");
  default:true;
  group: "sanitas";
}

setting::user_LeanneS {
  type:boolean;
  label:tr("LSkalayo|LeanneS");
  default:true;
  group: "sanitas";
}

setting::user_LillianM {
  type:boolean;
  label:tr("noodlemommy|LillianM");
  default:true;
  group: "sanitas";
}

setting::user_LoganM {
  type:boolean;
  label:tr("WarpathPeacock|LoganM");
  default:true;
  group: "sanitas";
}

setting::user_LoganS {
  type: boolean;
  label: tr("127logs|LoganS");
  default: true;
  group: "sanitas";
}

setting::user_MorgenM {
  type:boolean;
  label:tr("MMantlo|MorgenM");
  default:true;
  group: "sanitas";
}

setting::user_NickE {
  type:boolean;
  label:tr("jedimasterflint|NickE");
  default:true;
  group: "sanitas";
}

setting::user_RickZ {
  type:boolean;
  label:tr("Ouray|RickZ");
  default:true;
  group: "sanitas";
}

setting::user_Riley {
  type: boolean;
  label: tr("AlwaysSunnyInMapadelphia|Riley");
  default: true;
  group: "sanitas";
}

setting::user_Sierra {
  type:boolean;
  label: tr("riskybiznu|Sierra");
  default: true;
  group: "sanitas";
}

/* Seattle */

settings::seattle {
  label: tr("Seattle");
}

setting::user_AlbertG {
  type:boolean;
  label:tr("TheJAwesome1|AlbertG");
  default:true;
  group: "seattle";
}

setting::user_AlecH {
  type:boolean;
  label:tr("CapAhab|AlecH");
  default:true;
  group: "seattle";
}

setting::user_AnoudA {
  type:boolean;
  label:tr("And_12|AnoudA");
  default:true;
  group: "seattle";
}

setting::user_EduardoT {
  type:boolean;
  label:tr("VigotheCarpathian|EduardoT");
  default:true;
  group: "seattle";
}

setting::user_EdwardD {
  type:boolean;
  label:tr("Ned_Stark|EdwardD");
  default:true;
  group: "seattle";
}

setting::user_EvanD {
  type:boolean;
  label:tr("Evandering|EvanD");
  default:true;
  group: "seattle";
}

setting::user_FasickM {
  type:boolean;
  label:tr("Goatosm|FasickM");
  default:true;
  group: "seattle";
}

setting::user_HoraceH {
  type:boolean;
  label:tr("Hoordinates|HoraceH");
  default:true;
  group: "seattle";
}

setting::user_JasonC {
  type:boolean;
  label:tr("Red_Ranger|JasonC");
  default:true;
  group: "seattle";
}

setting::user_JenniferS {
  type:boolean;
  label:tr("geoJenn|JenniferS");
  default:true;
  group: "seattle";
}

setting::user_MichaelT {
  type:boolean;
  label:tr("trigeo|MichaelT");
  default:true;
  group: "seattle";
}

setting::user_NiyomiK {
  type:boolean;
  label:tr("n1y0m1|NiyomiK");
  default:true;
  group: "seattle";
}

setting::user_RikH {
  type:boolean;
  label:tr("whatmeinfallible|RikH");
  default:true;
  group: "seattle";
}

setting::user_StephanieH {
  type:boolean;
  label:tr("Avocadough!|StephanieH");
  default:true;
  group: "seattle";
}

setting::user_ViancaS {
  type:boolean;
  label:tr("Amonite1025|ViancaS");
  default:true;
  group: "seattle";
}

/* Tracking Selectors -- Way and node style BEFORE they are uploaded */

node:modified::modified_layer {
    symbol-shape: circle;
    symbol-size: 22;
    symbol-stroke-color: orange;
    symbol-stroke-width: 3px;
    symbol-fill-opacity: 0.5;
    z-index: -5;
}

way:modified::modified_layer,
node:modified < way::modified_layer {
    width: 6;
    color: transparent;
    opacity: 0;
    casing-width: 7;
    casing-color: #47D608;
    casing-opacity: 0.7;
    z-index: -5;
}

/* QC Styles */

/* User specific styles: Krakatoa */

*[osm_user_name() == "JDKaart"][setting("user_JoseL")],
*[osm_user_name() == "birdeatscake"][setting("user_KiraM")],
*[osm_user_name() == "smileyreilly"][setting("user_ReillyM")],
*[osm_user_name() == "martymcfly14"][setting("user_RyanM")],

/* User specific styles: Quandary */

*[osm_user_name() == "Corban8"][setting("user_CorbanG")],
*[osm_user_name() == "hairyhaggis"][setting("user_HamishH")],
*[osm_user_name() == "Baconcrisp"][setting("user_IanMa")],
*[osm_user_name() == "CoolGuyJake"][setting("user_JakeK")],
*[osm_user_name() == "AnonJason"][setting("user_JasonH")],
*[osm_user_name() == "JAAS"][setting("user_JorgeA")],
*[osm_user_name() == "Pegasus21"][setting("user_LaurenH")],
*[osm_user_name() == "InnerPace"][setting("user_PaceM")],
*[osm_user_name() == "hayduke1275"][setting("user_PaulS")],
*[osm_user_name() == "Toddtodd"][setting("user_ToddK")],
*[osm_user_name() == "tomincolorado"][setting("user_TomH")],
*[osm_user_name() == "Buddy-the-Elf"][setting("user_WilliamF")],

/* User specific styles: Sanitas */

*[osm_user_name() == "StriDez"][setting("user_AaronL")],
*[osm_user_name() == "albahabla"][setting("user_AlbaW")],
*[osm_user_name() == "Inigo_Maptoya"][setting("user_Angie")],
*[osm_user_name() == "PlinyTheYoungest"][setting("user_Anja")],
*[osm_user_name() == "ArleneC"][setting("user_ArleneC")],
*[osm_user_name() == "Almapthea"][setting("user_BrandonP")],
*[osm_user_name() == "ToastShark"][setting("user_BreiaV")],
*[osm_user_name() == "Coltrain"][setting("user_ColterM")],
*[osm_user_name() == "The_Intern"][setting("user_Daniel")],
*[osm_user_name() == "GbabethemapGod"][setting("user_GabeG")],
*[osm_user_name() == "Ikohl"][setting("user_IanK")],
*[osm_user_name() == "Winterson"][setting("user_IanMc")],
*[osm_user_name() == "eggothy"][setting("user_JamesP")],
*[osm_user_name() == "Mapistopheles"][setting("user_JessicaH")],
*[osm_user_name() == "luin132"][setting("user_LandonS")],
*[osm_user_name() == "LSkalayo"][setting("user_LeanneS")],
*[osm_user_name() == "noodlemommy"][setting("user_LillianM")],
*[osm_user_name() == "WarpathPeacock"][setting("user_LoganM")],
*[osm_user_name() == "127logs"][setting("user_LoganS")],
*[osm_user_name() == "MMantlo"][setting("user_MorgenM")],
*[osm_user_name() == "jedimasterflint"][setting("user_NickE")],
*[osm_user_name() == "Ouray"][setting("user_RickZ")],
*[osm_user_name() == "AlwaysSunnyInMapadelphia"][setting("user_Riley")],
*[osm_user_name() == "riskybiznu"][setting("user_Sierra")],

/* User specific styles: Seattle */

*[osm_user_name() == "TheJAwesome1"][setting("user_AlbertG")],
*[osm_user_name() == "CapAhab"][setting("user_AlecH")],
*[osm_user_name() == "And_12"][setting("user_AnoudA")],
*[osm_user_name() == "VigotheCarpathian"][setting("user_EduardoT")],
*[osm_user_name() == "Ned_Stark"][setting("user_EdwardD")],
*[osm_user_name() == "Evandering"][setting("user_EvanD")],
*[osm_user_name() == "Goatosm"][setting("user_FasickM")],
*[osm_user_name() == "Hoordinates"][setting("user_HoraceH")],
*[osm_user_name() == "Red_Ranger"][setting("user_JasonC")],
*[osm_user_name() == "geoJenn"][setting("user_JenniferS")],
*[osm_user_name() == "trigeo"][setting("user_MichaelT")],
*[osm_user_name() == "n1y0m1"][setting("user_NiyomiK")],
*[osm_user_name() == "whatmeinfallible"][setting("user_RikH")],
*[osm_user_name() == "Avocadough!"][setting("user_StephanieH")],
*[osm_user_name() == "Amonite1025"][setting("user_ViancaS")]
{
  set .Kaart;
}

/* This is how you search for someone with a space in their name

*[osm_user_name() == "Hector Vector"] {
  set .jman;
}

/* Styling of ways and nodes once they belong to "history" for each individual user */

way.Kaart
{
  z-index: -10;
  casing-color: #B108D6;
  casing-width: 7;
  casing-opacity: 0.6;
  /*
  text: eval(concat("Highway type =", " ", tag("highway")));
  text-offset: -20;
  */
}

node.Kaart
{
  symbol-size: 15;
  symbol-shape: triangle;
  symbol-stroke-color: blue;
  symbol-stroke-width: 3px;
  symbol-fill-opacity: 0.5;
  z-index: -5;
}
node:selected::selected_layer {
    symbol-shape: circle;
    symbol-size: 22;
    symbol-stroke-color: #DF2E08;
    symbol-stroke-width: 3px;
    symbol-fill-opacity: 0.5;
    z-index: -5;
}
